package {{.DbType}}

import (
	"context"

	{{if .Alias}}{{.Alias}} {{end}}"{{.ModulePath}}/internal/domain/{{.SnakeName}}"
	"github.com/jmoiron/sqlx"
)

type {{.FirstLowerName}}Repository struct {
	table string
	db    *sqlx.DB
}

func New{{.FirstUpperName}}Repository(db *sqlx.DB) *{{.FirstLowerName}}Repository {
	return &{{.FirstLowerName}}Repository{
		table: "{{.EntityTable}}",
		db:    db,
	}
}

func (r {{.FirstLowerName}}Repository) Table() string {
	return r.table
}

func (r *{{.FirstLowerName}}Repository) ByID(ctx context.Context, id int64) ({{.Alias}}.Entity, error) {
	var {{.EntitySymb}} {{.Alias}}.Entity
	err := r.db.GetContext(ctx, &{{.EntitySymb}}, "SELECT * FROM "+r.table+" WHERE id = $1", id)
	return {{.EntitySymb}}, err
}

func (r *{{.FirstLowerName}}Repository) Save(ctx context.Context, {{.EntitySymb}} *{{.Alias}}.Entity) error {
	return save(ctx, r.db, r.table, {{.EntitySymb}});
}