package db

import (
	// "errors"
	// "strings"

	// drvMysql "github.com/go-sql-driver/mysql"
	// "github.com/lib/pq"
)

func IsSerializationError(err error) bool {
	if err == nil {
		return false
	}

	// PostgreSQL
	/* if pqErr, ok := err.(*pq.Error); ok {
		return pqErr.Code == "40001" || pqErr.Code == "40P01"
	}
	var pErr *pq.Error
	if errors.As(err, &pErr) {
		return pErr.Code == "40001" || pErr.Code == "40P01"
	}
	if strings.Contains(err.Error(), "could not serialize access due to read/write dependencies among") {
		return true
	} */

	// MySQL
	/* var mysqlErr *drvMysql.MySQLError
	if errors.As(err, &mysqlErr) {
		return mysqlErr.Number == 1213 || mysqlErr.Number == 1205
	} */

	// SQL Server
	// return strings.Contains(err.Error(), "deadlock")
	return false
}
